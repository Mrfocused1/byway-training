---
const currentPath = Astro.url.pathname;
const isActive = (path: string) => currentPath === path;

interface Props {
  darkBackground?: boolean;
}

const { darkBackground = false } = Astro.props;
---

<nav id="navbar" class="fixed top-0 left-0 right-0 z-50 bg-transparent transition-all duration-300">
  <div class="container-custom py-4">
    <div class="flex items-center justify-between">
      <!-- Logo (Desktop) -->
      <a href="/" class="hidden md:flex items-center">
        <img
          id="logo-img"
          src="/logo.svg"
          alt="My Way Training"
          style="height: 60px; width: auto; max-width: 250px;"
          class="transition-all duration-300"
        />
      </a>

      <!-- Logo (Mobile) -->
      <a href="/" class="flex md:hidden items-center">
        <img
          id="logo-img-mobile"
          src="/logo.svg"
          alt="My Way Training"
          style="height: 45px; width: auto; max-width: 180px;"
          class="transition-all duration-300"
        />
      </a>

      <!-- Desktop Navigation -->
      <div class="hidden md:flex items-center space-x-8">
        <a href="/" id="nav-home" class:list={["font-medium transition-colors", isActive('/') ? 'text-accent' : darkBackground ? 'text-accent hover:text-primary' : 'text-black hover:text-accent']}>
          Home
        </a>
        <a href="/services" id="nav-services" class:list={["font-medium transition-colors", isActive('/services') ? 'text-accent' : darkBackground ? 'text-accent hover:text-primary' : 'text-black hover:text-accent']}>
          Services
        </a>
        <a href="/about" id="nav-about" class:list={["font-medium transition-colors", isActive('/about') ? 'text-accent' : darkBackground ? 'text-accent hover:text-primary' : 'text-black hover:text-accent']}>
          About
        </a>
        <a href="/contact" id="nav-contact" class:list={["font-medium transition-colors", isActive('/contact') ? 'text-accent' : darkBackground ? 'text-accent hover:text-primary' : 'text-black hover:text-accent']}>
          Contact
        </a>
        <a href="/contact#form" class="btn-primary">
          Book Consultation
        </a>
      </div>

      <!-- Mobile Menu Button -->
      <button id="mobile-menu-btn" class:list={["md:hidden p-2 transition-colors duration-300 relative z-[60]", darkBackground ? 'text-white' : 'text-black']} aria-label="Toggle menu">
        <!-- Hamburger Icon -->
        <svg id="hamburger-icon" class="w-7 h-7 transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
        <!-- Close Icon -->
        <svg id="close-icon" class="w-7 h-7 absolute top-2 left-2 hidden transition-all duration-300" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
  </div>
</nav>

<!-- Mobile Menu Overlay -->
<div id="mobile-menu-overlay" class="fixed inset-0 bg-black/50 backdrop-blur-sm z-40 md:hidden opacity-0 pointer-events-none transition-opacity duration-300"></div>

<!-- Mobile Slide-in Menu -->
<div id="mobile-menu" class="fixed top-0 right-0 h-full w-80 bg-white shadow-2xl z-50 md:hidden transform translate-x-full transition-transform duration-300 ease-in-out">
  <!-- Menu Links -->
  <div class="py-6 px-6 space-y-1">
    <a href="/" class:list={["block px-4 py-4 font-medium text-lg rounded-lg transition-all duration-200", isActive('/') ? 'bg-accent text-white' : 'text-gray-700 hover:bg-gray-100 hover:text-accent']}>
      Home
    </a>
    <a href="/services" class:list={["block px-4 py-4 font-medium text-lg rounded-lg transition-all duration-200", isActive('/services') ? 'bg-accent text-white' : 'text-gray-700 hover:bg-gray-100 hover:text-accent']}>
      Services
    </a>
    <a href="/about" class:list={["block px-4 py-4 font-medium text-lg rounded-lg transition-all duration-200", isActive('/about') ? 'bg-accent text-white' : 'text-gray-700 hover:bg-gray-100 hover:text-accent']}>
      About
    </a>
    <a href="/contact" class:list={["block px-4 py-4 font-medium text-lg rounded-lg transition-all duration-200", isActive('/contact') ? 'bg-accent text-white' : 'text-gray-700 hover:bg-gray-100 hover:text-accent']}>
      Contact
    </a>
  </div>

  <!-- CTA Button -->
  <div class="absolute bottom-8 left-6 right-6">
    <a href="/contact#form" class="btn-primary block text-center w-full py-4 text-base shadow-lg">
      Book Consultation
    </a>
  </div>
  </div>
</nav>

<script define:vars={{ darkBackground }}>
  // Mobile menu slide-in functionality
  const btn = document.getElementById('mobile-menu-btn');
  const menu = document.getElementById('mobile-menu');
  const overlay = document.getElementById('mobile-menu-overlay');
  const hamburgerIcon = document.getElementById('hamburger-icon');
  const closeIcon = document.getElementById('close-icon');
  const menuLinks = menu?.querySelectorAll('a');

  function openMenu() {
    menu?.classList.remove('translate-x-full');
    menu?.classList.add('translate-x-0');
    overlay?.classList.remove('opacity-0', 'pointer-events-none');
    overlay?.classList.add('opacity-100', 'pointer-events-auto');
    hamburgerIcon?.classList.add('hidden');
    closeIcon?.classList.remove('hidden');
    document.body.style.overflow = 'hidden';
  }

  function closeMenu() {
    menu?.classList.remove('translate-x-0');
    menu?.classList.add('translate-x-full');
    overlay?.classList.remove('opacity-100', 'pointer-events-auto');
    overlay?.classList.add('opacity-0', 'pointer-events-none');
    hamburgerIcon?.classList.remove('hidden');
    closeIcon?.classList.add('hidden');
    document.body.style.overflow = '';
  }

  // Toggle menu on button click
  btn?.addEventListener('click', () => {
    const isOpen = menu?.classList.contains('translate-x-0');
    if (isOpen) {
      closeMenu();
    } else {
      openMenu();
    }
  });

  // Close menu when overlay is clicked
  overlay?.addEventListener('click', closeMenu);

  // Close menu when any menu link is clicked
  menuLinks?.forEach(link => {
    link.addEventListener('click', closeMenu);
  });

  // Scroll-triggered navbar color change
  const navbar = document.getElementById('navbar');
  const logoImg = document.getElementById('logo-img');
  const logoImgMobile = document.getElementById('logo-img-mobile');
  const mobileMenuBtn = document.getElementById('mobile-menu-btn');
  const mobileMenu = document.getElementById('mobile-menu');
  const navLinks = {
    home: document.getElementById('nav-home'),
    services: document.getElementById('nav-services'),
    about: document.getElementById('nav-about'),
    contact: document.getElementById('nav-contact')
  };

  function updateNavbarOnScroll() {
    const scrolled = window.scrollY > 50;

    if (scrolled) {
      // Scrolled state: navy blue background with white text and logo
      navbar?.classList.remove('bg-transparent');
      navbar?.classList.add('bg-primary');

      // Invert both logos to white on dark background
      logoImg?.classList.add('invert', 'brightness-0');
      logoImgMobile?.classList.add('invert', 'brightness-0');

      mobileMenuBtn?.classList.remove('text-black');
      mobileMenuBtn?.classList.add('text-white');

      // Update desktop nav links (only non-active ones)
      Object.values(navLinks).forEach(link => {
        if (link && !link.classList.contains('text-accent')) {
          link.classList.remove('text-black');
          link.classList.add('text-white');
          link.classList.remove('hover:text-accent');
          link.classList.add('hover:text-accent');
        }
      });

      // Update mobile menu background
      mobileMenu?.classList.remove('bg-transparent');
      mobileMenu?.classList.add('bg-primary');
    } else {
      // Top of page: transparent background with text color based on background
      navbar?.classList.remove('bg-primary');
      navbar?.classList.add('bg-transparent');

      // Both logos always stay black at top of page
      logoImg?.classList.remove('invert', 'brightness-0');
      logoImgMobile?.classList.remove('invert', 'brightness-0');

      // Use white text for mobile if dark background, black text otherwise
      const textColor = darkBackground ? 'text-white' : 'text-black';
      const oppositeColor = darkBackground ? 'text-black' : 'text-white';

      mobileMenuBtn?.classList.remove(oppositeColor);
      mobileMenuBtn?.classList.add(textColor);

      // Update desktop nav links (only non-active ones)
      // On dark background at top: use accent color, on light: use black
      Object.values(navLinks).forEach(link => {
        if (link && !link.classList.contains('text-accent')) {
          link.classList.remove('text-white', 'text-black');
          if (darkBackground) {
            link.classList.add('text-accent');
          } else {
            link.classList.add('text-black');
          }
        }
      });

      // Update mobile menu background
      mobileMenu?.classList.remove('bg-primary');
      mobileMenu?.classList.add('bg-transparent');
    }
  }

  // Run on page load
  updateNavbarOnScroll();

  // Run on scroll
  window.addEventListener('scroll', updateNavbarOnScroll);
</script>
